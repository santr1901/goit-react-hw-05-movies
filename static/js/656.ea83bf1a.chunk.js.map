{"version":3,"file":"static/js/656.ea83bf1a.chunk.js","mappings":"iMAsCA,UAjCa,WACX,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAQN,GAAIO,MAAK,SAAAC,GACf,IAAMC,EAAYD,EAASL,KAAKO,KAAI,SAAAC,GAAK,MAAK,CAC5CC,KAAMD,EAAMC,KACZC,UAAWF,EAAME,UACjBC,MAAM,kCAAD,OAAoCH,EAAMI,cAHR,IAKzCX,EAAQK,EACT,GACF,GAAE,CAACT,IAiBJ,OAAO,wBAdEG,EAAKO,KAAI,SAAAC,GAAK,OACnB,2BACE,mBACA,gBACEK,MAAM,OACNC,OAAO,QACPC,IAAKP,EAAMC,KACXO,IAAKR,EAAMG,SAEb,uBAAIH,EAAMC,QACV,uCAAeD,EAAME,eATdF,EAAMC,KADI,KAexB,C,4MClCKQ,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,IAAAA,IAAA,gEACoCF,IAFtD,cACCZ,EADD,OAIGe,EAASf,EAATe,KAJH,kBAMEA,EAAKC,SANP,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA0BzB,GAA1B,uFACkBsB,IAAAA,IAAA,6CACiBtB,EADjB,oBAC+BoB,IAFjD,cACCZ,EADD,yBAKEA,EAASe,MALX,kEAQA,SAAejB,EAAtB,+CAAO,OAAP,oBAAO,WAAuBN,GAAvB,uFACkBsB,IAAAA,IAAA,6CACiBtB,EADjB,4BACuCoB,EADvC,oBADlB,cACCZ,EADD,yBAKEA,EAASe,MALX,kEAQA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0B1B,GAA1B,uFACkBsB,IAAAA,IAAA,6CACiBtB,EADjB,4BACuCoB,EADvC,2BADlB,cACCZ,EADD,yBAKEA,EAASe,MALX,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,uFACkBN,IAAAA,IAAA,4DACgCF,EADhC,iCACgEQ,EADhE,gCADlB,cACCpB,EADD,yBAKEA,EAASe,MALX,kE","sources":["Pages/MovieDetails/Cast/Cast.jsx","service.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { getCast } from 'service';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    getCast(id).then(response => {\n      const allActors = response.cast.map(actor => ({\n        name: actor.name,\n        character: actor.character,\n        photo: `https://image.tmdb.org/t/p/w500${actor.profile_path}`,\n      }));\n      setCast(allActors);\n    });\n  }, [id]);\n\n  const showCast = () => {\n    return cast.map(actor => (\n      <li key={actor.name}>\n        <hr />\n        <img\n          width=\"70px\"\n          height=\"100px\"\n          alt={actor.name}\n          src={actor.photo}\n        ></img>\n        <p>{actor.name}</p>\n        <p>Character: {actor.character}</p>\n      </li>\n    ));\n  };\n  return <ul>{showCast()}</ul>;\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '4167a3621086eb019767740c5538e3e4';\n\nexport async function getTrending() {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );\n  const { data } = response;\n\n  return data.results;\n}\n\nexport async function getDetails(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n\n  return response.data;\n}\n\nexport async function getCast(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n}\n\nexport async function getReviews(id) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n}\n\nexport async function searchMovie(movieName) {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${movieName}&page=1&include_adult=false`\n  );\n\n  return response.data;\n}\n"],"names":["id","useParams","useState","cast","setCast","useEffect","getCast","then","response","allActors","map","actor","name","character","photo","profile_path","width","height","alt","src","API_KEY","getTrending","axios","data","results","getDetails","getReviews","searchMovie","movieName"],"sourceRoot":""}